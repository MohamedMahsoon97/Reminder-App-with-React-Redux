{"version":3,"sources":["types.js","Img/OIP.jpeg","App.js","actions/index.js","Component/reducers.js","index.js"],"names":["ADD_REMINDER","REMOVE_REMINDER","CLEAR_REMINDER","App","state","id","text","date","Date","render_reminder","reminders","props","className","map","reminder","moment","fromNow","onClick","remove_Reminder","src","logo","onChange","e","setState","target","value","type","this","placeholder","selected","placeholderText","showTimeSelect","timeFormat","timeCaption","dateFormat","add_Reminder","clear_Reminder","Component","connect","action","console","log","read_cookie","Math","random","bake_cookie","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"sLAAaA,EAAe,eACfC,EAAkB,kBAClBC,EAAiB,iB,0CCFf,G,MAAA,IAA0B,kC,eCQnCC,E,4MACJC,MAAQ,CACJC,GAAK,GACLC,KAAO,GACPC,KAAO,IAAIC,M,EAGfC,gBAAkB,WACd,IAAOC,EAAa,EAAKC,MAAlBD,UACP,OACI,oBAAIE,UAAU,aAAd,SAEQF,EAAUG,KAAI,SAAAC,GACV,OACI,qBAAsBF,UAAU,kBAAhC,UACI,8BAAME,EAASR,OACf,8BAAMS,IAAO,IAAIP,KAAKM,EAASP,OAAOS,YACtC,wBAAQJ,UAAU,wBAAwBK,QAAU,kBAAM,EAAKN,MAAMO,gBAAgBJ,EAAST,KAA9F,sBAHKS,EAAST,U,4CAY1C,WAAU,IAAD,OACP,OACE,sBAAKO,UAAU,YAAf,UACI,qBAAKO,IAAKC,IACV,qBAAKR,UAAU,6BAAf,SACI,sDAEJ,uBACIS,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACjB,KAAOgB,EAAEE,OAAOC,SAChDC,KAAK,OACLD,MAAOE,KAAKvB,MAAME,KAClBsB,YAAY,uBACZhB,UAAU,iBAEd,cAAC,IAAD,CACIa,MAAOE,KAAKvB,MAAMG,KAClBK,UAAU,eACViB,SAAUF,KAAKvB,MAAMG,KACrBc,SAAU,SAACd,GAAD,OAAU,EAAKgB,SAAS,CAAChB,UACnCuB,gBAAgB,YAChBC,gBAAc,EACdC,WAAW,QACXC,YAAY,OACZC,WAAW,yBAEf,wBACIjB,QAAS,WACL,EAAKN,MAAMwB,aAAa,EAAK/B,MAAME,KAAO,EAAKF,MAAMG,MACrD,EAAKgB,SAAS,CAACjB,KAAO,GAAKC,KAAO,MAEtCK,UAAU,2CALd,0BAQA,wBACIK,QAAS,kBAAM,EAAKN,MAAMyB,kBAC1BxB,UAAU,0CAFd,6BAKGe,KAAKlB,yB,GAhEA4B,aAkFHC,eAAS,SAAClC,GACrB,MAAO,CACHM,UAAYN,KAEhB,CACA+B,aC5FwB,SAAC7B,EAAOC,GAO9B,MANe,CACTmB,KAAO1B,EACPM,OACAC,SDyFRW,gBCjF2B,SAACb,GAC1B,IAAMkC,EAAS,CACTb,KAAOzB,EACPI,MAGN,OADAmC,QAAQC,IAAI,YAAcF,GACnBA,GD4ETH,eCvE0B,WAIxB,MAHe,CACTV,KAAOxB,KD8DJoC,CASXnC,G,wBExEWO,EAxBG,WAA0B,IAAzBN,EAAwB,uDAAhB,GAAKmC,EAAW,uCACjC7B,EAAY,GAEhB,OADAN,EAAQsC,sBAAY,aAChBH,EAAOb,MAAQ1B,GACbU,EAAS,sBAAQN,GAAR,CAAgB,CAAEE,KAAOiC,EAAOjC,KAAOC,KAAOgC,EAAOhC,KAAOF,GAAKsC,KAAKC,YAC/EC,sBAAY,YAAcnC,GAC1B8B,QAAQC,IAAI,iBAAmB/B,GACxBA,GAEH6B,EAAOb,OAASzB,GACpBS,EAAYN,EAAM0C,QAAQ,SAAAhC,GAAQ,OAAIA,EAAST,KAAOkC,EAAOlC,MAC7DwC,sBAAY,YAAcnC,GACnBA,GAEJ6B,EAAOb,OAASxB,GACnBQ,EAAY,GACZmC,sBAAY,YAAcnC,GACnBA,GAGAN,GCfb2C,G,OAAQC,YAAYtC,IAE1BuC,IAASC,OACL,cAAC,IAAD,CAAUH,MAAQA,EAAlB,SACI,cAAC,EAAD,MAEJI,SAASC,eAAe,U","file":"static/js/main.21983897.chunk.js","sourcesContent":["export const ADD_REMINDER = 'ADD_REMINDER';\r\nexport const REMOVE_REMINDER = 'REMOVE_REMINDER';\r\nexport const CLEAR_REMINDER = 'CLEAR_REMINDER';","export default __webpack_public_path__ + \"static/media/OIP.c1b8dc27.jpeg\";","import React, { Component } from 'react'\nimport { add_Reminder , remove_Reminder , clear_Reminder} from './actions'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport logo from './Img/OIP.jpeg'\nimport './app.css'\nclass App extends Component {\n  state = {\n      id : '',\n      text : '',\n      date : new Date()\n  }\n\n  render_reminder = () => {\n      const {reminders} = this.props;\n      return (\n          <ul className='list-group'>\n              {\n                  reminders.map(reminder => {\n                      return (\n                          <li key={reminder.id} className='list-group-item'>\n                              <div>{reminder.text}</div>\n                              <div>{moment(new Date(reminder.date)).fromNow()}</div>\n                              <button className='remove btn btn-danger' onClick={ () => this.props.remove_Reminder(reminder.id) }>remove</button>\n                          </li>\n                      )\n                  })\n              }\n          </ul>\n      )\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n          <img src={logo}/>\n          <div className=\"reminder-title text-center\">\n              <h2>What should u do ?</h2>\n          </div>\n          <input \n              onChange={(e) => this.setState({text : e.target.value})}\n              type=\"text\"\n              value={this.state.text}\n              placeholder=\"type what do u think\" \n              className=\"form-control\"\n          />\n          <DatePicker\n              value={this.state.date}\n              className=\"form-control\" \n              selected={this.state.date} // \n              onChange={(date) => this.setState({date})}\n              placeholderText='Type Date'\n              showTimeSelect    // set date & time\n              timeFormat=\"HH:mm\"   // hour : min\n              timeCaption=\"time\"       // column aside\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n          />\n          <button \n              onClick={() => {\n                  this.props.add_Reminder(this.state.text , this.state.date);\n                  this.setState({text : '' , date : ''});\n              }}\n              className=\"btn-adcl btn btn-primary w-100 btn-block\">\n              Add Reminder\n          </button>\n          <button \n              onClick={() => this.props.clear_Reminder()}\n              className=\"btn-adcl btn btn-danger w-100 btn-block\">\n              Clear Reminders\n            </button>\n            {this.render_reminder()}\n      </div>\n    )\n  }\n}\n\n// function mapDispatchToProps (dispatch) {\n//     return {\n//         add_Reminder : () => dispatch(add_Reminder())\n//     }\n// }\n\n// function mapStateToProps(state) {\n//     return {\n//         reminders : state\n//     }\n// }\n\nexport default connect( (state) => {\n    return {\n        reminders : state\n    }\n} , {\n    add_Reminder ,\n    remove_Reminder,\n    clear_Reminder\n  } \n  )(App);","import { ADD_REMINDER , REMOVE_REMINDER , CLEAR_REMINDER} from \"../types\";\r\n\r\n// Action Creator Add Reminder\r\nexport const add_Reminder = (text , date) => {\r\n      const action = {\r\n            type : ADD_REMINDER,\r\n            text,\r\n            date\r\n      }\r\n      // console.log(\"b show el : \" , action);\r\n      return action;\r\n}\r\n\r\n\r\n// Action Creator Remove Reminder\r\nexport const remove_Reminder = (id) => {\r\n      const action = {\r\n            type : REMOVE_REMINDER,\r\n            id,\r\n      }\r\n      console.log(\"remove : \" , action);\r\n      return action;\r\n}\r\n\r\n\r\n// Action Creator ClearAll\r\nexport const clear_Reminder = () => {\r\n      const action = {\r\n            type : CLEAR_REMINDER\r\n      }\r\n      return action\r\n}","import { ADD_REMINDER , REMOVE_REMINDER , CLEAR_REMINDER} from \"../types\";\r\nimport { bake_cookie, read_cookie } from 'sfcookies'\r\n\r\nconst reminders = (state = [] , action) => {\r\n      let reminders = [];\r\n      state = read_cookie('reminders');\r\n      if (action.type == ADD_REMINDER) {\r\n            reminders = [ ...state , { text : action.text , date : action.date , id : Math.random() }];\r\n            bake_cookie('reminders' , reminders);\r\n            console.log(\" from reducer \" , reminders);\r\n            return reminders;\r\n      } \r\n      else if  (action.type === REMOVE_REMINDER) {\r\n            reminders = state.filter( reminder => reminder.id !== action.id );\r\n            bake_cookie('reminders' , reminders);\r\n            return reminders;\r\n      } \r\n      else if (action.type === CLEAR_REMINDER) {\r\n            reminders = [];\r\n            bake_cookie('reminders' , reminders);\r\n            return reminders;\r\n      }\r\n      else {\r\n            return state;\r\n      } \r\n}\r\n\r\nexport default reminders;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {createStore} from 'redux';\nimport {Provider } from 'react-redux';\nimport reminders from './Component/reducers';\nimport 'bootstrap/dist/css/bootstrap.min.css';  \n\nconst store = createStore(reminders);\n\nReactDOM.render(      \n    <Provider store ={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}